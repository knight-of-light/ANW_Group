Grammar

    0 $accept: root $end

    1 root: /* empty */
    2     | root class

    3 @1: /* empty */

    4 class: CLASS IDENT '{' @1 members '}'

    5 @2: /* empty */

    6 class: CLASS IDENT ':' IDENT '{' @2 members '}'

    7 members: /* empty */
    8        | members member

    9 member: global
   10       | constructor
   11       | function

   12 global: accessmodif type variables ';'

   13 @3: /* empty */

   14 constructor: accessmodif IDENT '(' @3 args_e ')' '{' statements '}'

   15 @4: /* empty */

   16 function: accessmodif type IDENT '(' @4 args_e ')' '{' statements '}'

   17 @5: /* empty */

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' '{' statements '}'

   19 arg: type IDENT

   20 args: arg
   21     | args ',' arg

   22 args_e: /* empty */
   23       | args

   24 variables: variable
   25          | variables ',' variable

   26 variable: IDENT
   27         | IDENT '=' expression

   28 accessmodif: /* empty */
   29            | PUBLIC
   30            | PRIVATE
   31            | PUBLIC STATIC
   32            | STATIC
   33            | PRIVATE STATIC

   34 type: noarraytype
   35     | arraytype

   36 noarraytype: IDENT
   37            | basictype

   38 basictype: INT
   39          | DOUBLE
   40          | BOOL
   41          | OBJECT

   42 arraytype: IDENT LSBracket RSBracket
   43          | IDENT LSBracket ',' RSBracket
   44          | IDENT LSBracket ',' ',' RSBracket
   45          | basictype LSBracket RSBracket
   46          | basictype LSBracket ',' RSBracket
   47          | basictype LSBracket ',' ',' RSBracket

   48 expression: INCREMENT IDENT
   49           | DECREMENT IDENT
   50           | IDENT INCREMENT
   51           | IDENT DECREMENT
   52           | '!' expression
   53           | '-' expression
   54           | '+' expression
   55           | '(' expression ')'
   56           | IDENT
   57           | IDENT arrayindex
   58           | expression '=' expression
   59           | IDENT '(' expr_list_e ')'
   60           | NEW IDENT '(' expr_list_e ')'
   61           | NEW noarraytype arrayindex
   62           | IDENT '.' expression
   63           | IDENT arrayindex '.' expression
   64           | THIS '.' expression
   65           | expression EQ expression
   66           | expression NE expression
   67           | expression '<' expression
   68           | expression SE expression
   69           | expression '>' expression
   70           | expression LE expression
   71           | expression '+' expression
   72           | expression '-' expression
   73           | expression '*' expression
   74           | expression '/' expression
   75           | expression '%' expression
   76           | expression AND expression
   77           | expression OR expression
   78           | expression IS type
   79           | '(' basictype ')' expression
   80           | INTEGER
   81           | REAL
   82           | TRUE
   83           | FALSE
   84           | THIS
   85           | NUL

   86 arrayindex: LSBracket expression RSBracket
   87           | LSBracket expression ',' expression RSBracket
   88           | LSBracket expression ',' expression ',' expression RSBracket

   89 expr_list: expression
   90          | expr_list ',' expression

   91 expr_list_e: /* empty */
   92            | expr_list

   93 statement: IF '(' expression ')' statement
   94          | IF '(' expression ')' statement ELSE statement
   95          | WHILE '(' expression ')' statement
   96          | FOR '(' variables_e ';' expr_e ';' expr_e ')' statement
   97          | expression ';'
   98          | type variables ';'
   99          | ';'

  100 @6: /* empty */

  101 statement: '{' @6 statements '}'
  102          | RETURN expr_e ';'

  103 statements: /* empty */
  104           | statements statement

  105 variables_e: /* empty */
  106            | type variables
  107            | variables

  108 expr_e: /* empty */
  109       | expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 52
'%' (37) 75
'(' (40) 14 16 18 55 59 60 79 93 94 95 96
')' (41) 14 16 18 55 59 60 79 93 94 95 96
'*' (42) 73
'+' (43) 54 71
',' (44) 21 25 43 44 46 47 87 88 90
'-' (45) 53 72
'.' (46) 62 63 64
'/' (47) 74
':' (58) 6
';' (59) 12 96 97 98 99 102
'<' (60) 67
'=' (61) 27 58
'>' (62) 69
'{' (123) 4 6 14 16 18 101
'}' (125) 4 6 14 16 18 101
error (256)
IDENT (258) 4 6 14 16 18 19 26 27 36 42 43 44 48 49 50 51 56 57 59
    60 62 63
INTEGER (259) 80
REAL (260) 81
CLASS (261) 4 6
BOOL (262) 40
DOUBLE (263) 39
INT (264) 38
IS (265) 78
OBJECT (266) 41
IF (267) 93 94
ELSE (268) 94
WHILE (269) 95
FOR (270) 96
FALSE (271) 83
TRUE (272) 82
NEW (273) 60 61
THIS (274) 64 84
NUL (275) 85
PRIVATE (276) 30 33
PUBLIC (277) 29 31
STATIC (278) 31 32 33
VOID (279) 18
RETURN (280) 102
LSBracket (281) 42 43 44 45 46 47 86 87 88
RSBracket (282) 42 43 44 45 46 47 86 87 88
IF_PREC (283)
CAST (284)
OR (285) 77
AND (286) 76
NE (287) 66
EQ (288) 65
SE (289) 68
LE (290) 70
UNARY_OP (291)
DECREMENT (292) 49 51
INCREMENT (293) 48 50


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
root (57)
    on left: 1 2, on right: 0 2
class (58)
    on left: 4 6, on right: 2
@1 (59)
    on left: 3, on right: 4
@2 (60)
    on left: 5, on right: 6
members (61)
    on left: 7 8, on right: 4 6 8
member (62)
    on left: 9 10 11, on right: 8
global (63)
    on left: 12, on right: 9
constructor (64)
    on left: 14, on right: 10
@3 (65)
    on left: 13, on right: 14
function (66)
    on left: 16 18, on right: 11
@4 (67)
    on left: 15, on right: 16
@5 (68)
    on left: 17, on right: 18
arg (69)
    on left: 19, on right: 20 21
args (70)
    on left: 20 21, on right: 21 23
args_e (71)
    on left: 22 23, on right: 14 16 18
variables (72)
    on left: 24 25, on right: 12 25 98 106 107
variable (73)
    on left: 26 27, on right: 24 25
accessmodif (74)
    on left: 28 29 30 31 32 33, on right: 12 14 16 18
type (75)
    on left: 34 35, on right: 12 16 19 78 98 106
noarraytype (76)
    on left: 36 37, on right: 34 61
basictype (77)
    on left: 38 39 40 41, on right: 37 45 46 47 79
arraytype (78)
    on left: 42 43 44 45 46 47, on right: 35
expression (79)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85,
    on right: 27 52 53 54 55 58 62 63 64 65 66 67 68 69 70 71 72 73
    74 75 76 77 78 79 86 87 88 89 90 93 94 95 97 109
arrayindex (80)
    on left: 86 87 88, on right: 57 61 63
expr_list (81)
    on left: 89 90, on right: 90 92
expr_list_e (82)
    on left: 91 92, on right: 59 60
statement (83)
    on left: 93 94 95 96 97 98 99 101 102, on right: 93 94 95 96 104
@6 (84)
    on left: 100, on right: 101
statements (85)
    on left: 103 104, on right: 14 16 18 101 104
variables_e (86)
    on left: 105 106 107, on right: 96
expr_e (87)
    on left: 108 109, on right: 96 102


state 0

    0 $accept: . root $end

    $default  reduce using rule 1 (root)

    root  go to state 1


state 1

    0 $accept: root . $end
    2 root: root . class

    $end   shift, and go to state 2
    CLASS  shift, and go to state 3

    class  go to state 4


state 2

    0 $accept: root $end .

    $default  accept


state 3

    4 class: CLASS . IDENT '{' @1 members '}'
    6      | CLASS . IDENT ':' IDENT '{' @2 members '}'

    IDENT  shift, and go to state 5


state 4

    2 root: root class .

    $default  reduce using rule 2 (root)


state 5

    4 class: CLASS IDENT . '{' @1 members '}'
    6      | CLASS IDENT . ':' IDENT '{' @2 members '}'

    '{'  shift, and go to state 6
    ':'  shift, and go to state 7


state 6

    4 class: CLASS IDENT '{' . @1 members '}'

    $default  reduce using rule 3 (@1)

    @1  go to state 8


state 7

    6 class: CLASS IDENT ':' . IDENT '{' @2 members '}'

    IDENT  shift, and go to state 9


state 8

    4 class: CLASS IDENT '{' @1 . members '}'

    $default  reduce using rule 7 (members)

    members  go to state 10


state 9

    6 class: CLASS IDENT ':' IDENT . '{' @2 members '}'

    '{'  shift, and go to state 11


state 10

    4 class: CLASS IDENT '{' @1 members . '}'
    8 members: members . member

    PRIVATE  shift, and go to state 12
    PUBLIC   shift, and go to state 13
    STATIC   shift, and go to state 14
    '}'      shift, and go to state 15

    $default  reduce using rule 28 (accessmodif)

    member       go to state 16
    global       go to state 17
    constructor  go to state 18
    function     go to state 19
    accessmodif  go to state 20


state 11

    6 class: CLASS IDENT ':' IDENT '{' . @2 members '}'

    $default  reduce using rule 5 (@2)

    @2  go to state 21


state 12

   30 accessmodif: PRIVATE .
   33            | PRIVATE . STATIC

    STATIC  shift, and go to state 22

    $default  reduce using rule 30 (accessmodif)


state 13

   29 accessmodif: PUBLIC .
   31            | PUBLIC . STATIC

    STATIC  shift, and go to state 23

    $default  reduce using rule 29 (accessmodif)


state 14

   32 accessmodif: STATIC .

    $default  reduce using rule 32 (accessmodif)


state 15

    4 class: CLASS IDENT '{' @1 members '}' .

    $default  reduce using rule 4 (class)


state 16

    8 members: members member .

    $default  reduce using rule 8 (members)


state 17

    9 member: global .

    $default  reduce using rule 9 (member)


state 18

   10 member: constructor .

    $default  reduce using rule 10 (member)


state 19

   11 member: function .

    $default  reduce using rule 11 (member)


state 20

   12 global: accessmodif . type variables ';'
   14 constructor: accessmodif . IDENT '(' @3 args_e ')' '{' statements '}'
   16 function: accessmodif . type IDENT '(' @4 args_e ')' '{' statements '}'
   18         | accessmodif . VOID IDENT '(' @5 args_e ')' '{' statements '}'

    IDENT   shift, and go to state 24
    BOOL    shift, and go to state 25
    DOUBLE  shift, and go to state 26
    INT     shift, and go to state 27
    OBJECT  shift, and go to state 28
    VOID    shift, and go to state 29

    type         go to state 30
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33


state 21

    6 class: CLASS IDENT ':' IDENT '{' @2 . members '}'

    $default  reduce using rule 7 (members)

    members  go to state 34


state 22

   33 accessmodif: PRIVATE STATIC .

    $default  reduce using rule 33 (accessmodif)


state 23

   31 accessmodif: PUBLIC STATIC .

    $default  reduce using rule 31 (accessmodif)


state 24

   14 constructor: accessmodif IDENT . '(' @3 args_e ')' '{' statements '}'
   36 noarraytype: IDENT .
   42 arraytype: IDENT . LSBracket RSBracket
   43          | IDENT . LSBracket ',' RSBracket
   44          | IDENT . LSBracket ',' ',' RSBracket

    LSBracket  shift, and go to state 35
    '('        shift, and go to state 36

    $default  reduce using rule 36 (noarraytype)


state 25

   40 basictype: BOOL .

    $default  reduce using rule 40 (basictype)


state 26

   39 basictype: DOUBLE .

    $default  reduce using rule 39 (basictype)


state 27

   38 basictype: INT .

    $default  reduce using rule 38 (basictype)


state 28

   41 basictype: OBJECT .

    $default  reduce using rule 41 (basictype)


state 29

   18 function: accessmodif VOID . IDENT '(' @5 args_e ')' '{' statements '}'

    IDENT  shift, and go to state 37


state 30

   12 global: accessmodif type . variables ';'
   16 function: accessmodif type . IDENT '(' @4 args_e ')' '{' statements '}'

    IDENT  shift, and go to state 38

    variables  go to state 39
    variable   go to state 40


state 31

   34 type: noarraytype .

    $default  reduce using rule 34 (type)


state 32

   37 noarraytype: basictype .
   45 arraytype: basictype . LSBracket RSBracket
   46          | basictype . LSBracket ',' RSBracket
   47          | basictype . LSBracket ',' ',' RSBracket

    LSBracket  shift, and go to state 41

    $default  reduce using rule 37 (noarraytype)


state 33

   35 type: arraytype .

    $default  reduce using rule 35 (type)


state 34

    6 class: CLASS IDENT ':' IDENT '{' @2 members . '}'
    8 members: members . member

    PRIVATE  shift, and go to state 12
    PUBLIC   shift, and go to state 13
    STATIC   shift, and go to state 14
    '}'      shift, and go to state 42

    $default  reduce using rule 28 (accessmodif)

    member       go to state 16
    global       go to state 17
    constructor  go to state 18
    function     go to state 19
    accessmodif  go to state 20


state 35

   42 arraytype: IDENT LSBracket . RSBracket
   43          | IDENT LSBracket . ',' RSBracket
   44          | IDENT LSBracket . ',' ',' RSBracket

    RSBracket  shift, and go to state 43
    ','        shift, and go to state 44


state 36

   14 constructor: accessmodif IDENT '(' . @3 args_e ')' '{' statements '}'

    $default  reduce using rule 13 (@3)

    @3  go to state 45


state 37

   18 function: accessmodif VOID IDENT . '(' @5 args_e ')' '{' statements '}'

    '('  shift, and go to state 46


state 38

   16 function: accessmodif type IDENT . '(' @4 args_e ')' '{' statements '}'
   26 variable: IDENT .
   27         | IDENT . '=' expression

    '='  shift, and go to state 47
    '('  shift, and go to state 48

    $default  reduce using rule 26 (variable)


state 39

   12 global: accessmodif type variables . ';'
   25 variables: variables . ',' variable

    ';'  shift, and go to state 49
    ','  shift, and go to state 50


state 40

   24 variables: variable .

    $default  reduce using rule 24 (variables)


state 41

   45 arraytype: basictype LSBracket . RSBracket
   46          | basictype LSBracket . ',' RSBracket
   47          | basictype LSBracket . ',' ',' RSBracket

    RSBracket  shift, and go to state 51
    ','        shift, and go to state 52


state 42

    6 class: CLASS IDENT ':' IDENT '{' @2 members '}' .

    $default  reduce using rule 6 (class)


state 43

   42 arraytype: IDENT LSBracket RSBracket .

    $default  reduce using rule 42 (arraytype)


state 44

   43 arraytype: IDENT LSBracket ',' . RSBracket
   44          | IDENT LSBracket ',' . ',' RSBracket

    RSBracket  shift, and go to state 53
    ','        shift, and go to state 54


state 45

   14 constructor: accessmodif IDENT '(' @3 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 55
    BOOL    shift, and go to state 25
    DOUBLE  shift, and go to state 26
    INT     shift, and go to state 27
    OBJECT  shift, and go to state 28

    $default  reduce using rule 22 (args_e)

    arg          go to state 56
    args         go to state 57
    args_e       go to state 58
    type         go to state 59
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33


state 46

   18 function: accessmodif VOID IDENT '(' . @5 args_e ')' '{' statements '}'

    $default  reduce using rule 17 (@5)

    @5  go to state 60


state 47

   27 variable: IDENT '=' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 75


state 48

   16 function: accessmodif type IDENT '(' . @4 args_e ')' '{' statements '}'

    $default  reduce using rule 15 (@4)

    @4  go to state 76


state 49

   12 global: accessmodif type variables ';' .

    $default  reduce using rule 12 (global)


state 50

   25 variables: variables ',' . variable

    IDENT  shift, and go to state 77

    variable  go to state 78


state 51

   45 arraytype: basictype LSBracket RSBracket .

    $default  reduce using rule 45 (arraytype)


state 52

   46 arraytype: basictype LSBracket ',' . RSBracket
   47          | basictype LSBracket ',' . ',' RSBracket

    RSBracket  shift, and go to state 79
    ','        shift, and go to state 80


state 53

   43 arraytype: IDENT LSBracket ',' RSBracket .

    $default  reduce using rule 43 (arraytype)


state 54

   44 arraytype: IDENT LSBracket ',' ',' . RSBracket

    RSBracket  shift, and go to state 81


state 55

   36 noarraytype: IDENT .
   42 arraytype: IDENT . LSBracket RSBracket
   43          | IDENT . LSBracket ',' RSBracket
   44          | IDENT . LSBracket ',' ',' RSBracket

    LSBracket  shift, and go to state 35

    $default  reduce using rule 36 (noarraytype)


state 56

   20 args: arg .

    $default  reduce using rule 20 (args)


state 57

   21 args: args . ',' arg
   23 args_e: args .

    ','  shift, and go to state 82

    $default  reduce using rule 23 (args_e)


state 58

   14 constructor: accessmodif IDENT '(' @3 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 83


state 59

   19 arg: type . IDENT

    IDENT  shift, and go to state 84


state 60

   18 function: accessmodif VOID IDENT '(' @5 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 55
    BOOL    shift, and go to state 25
    DOUBLE  shift, and go to state 26
    INT     shift, and go to state 27
    OBJECT  shift, and go to state 28

    $default  reduce using rule 22 (args_e)

    arg          go to state 56
    args         go to state 57
    args_e       go to state 85
    type         go to state 59
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33


state 61

   50 expression: IDENT . INCREMENT
   51           | IDENT . DECREMENT
   56           | IDENT .
   57           | IDENT . arrayindex
   59           | IDENT . '(' expr_list_e ')'
   62           | IDENT . '.' expression
   63           | IDENT . arrayindex '.' expression

    LSBracket  shift, and go to state 86
    DECREMENT  shift, and go to state 87
    INCREMENT  shift, and go to state 88
    '.'        shift, and go to state 89
    '('        shift, and go to state 90

    $default  reduce using rule 56 (expression)

    arrayindex  go to state 91


state 62

   80 expression: INTEGER .

    $default  reduce using rule 80 (expression)


state 63

   81 expression: REAL .

    $default  reduce using rule 81 (expression)


state 64

   83 expression: FALSE .

    $default  reduce using rule 83 (expression)


state 65

   82 expression: TRUE .

    $default  reduce using rule 82 (expression)


state 66

   60 expression: NEW . IDENT '(' expr_list_e ')'
   61           | NEW . noarraytype arrayindex

    IDENT   shift, and go to state 92
    BOOL    shift, and go to state 25
    DOUBLE  shift, and go to state 26
    INT     shift, and go to state 27
    OBJECT  shift, and go to state 28

    noarraytype  go to state 93
    basictype    go to state 94


state 67

   64 expression: THIS . '.' expression
   84           | THIS .

    '.'  shift, and go to state 95

    $default  reduce using rule 84 (expression)


state 68

   85 expression: NUL .

    $default  reduce using rule 85 (expression)


state 69

   54 expression: '+' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 96


state 70

   53 expression: '-' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 97


state 71

   52 expression: '!' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 98


state 72

   49 expression: DECREMENT . IDENT

    IDENT  shift, and go to state 99


state 73

   48 expression: INCREMENT . IDENT

    IDENT  shift, and go to state 100


state 74

   55 expression: '(' . expression ')'
   79           | '(' . basictype ')' expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 25
    DOUBLE     shift, and go to state 26
    INT        shift, and go to state 27
    OBJECT     shift, and go to state 28
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    basictype   go to state 101
    expression  go to state 102


state 75

   27 variable: IDENT '=' expression .
   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    IS   shift, and go to state 103
    '='  shift, and go to state 104
    OR   shift, and go to state 105
    AND  shift, and go to state 106
    NE   shift, and go to state 107
    EQ   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 27 (variable)


state 76

   16 function: accessmodif type IDENT '(' @4 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 55
    BOOL    shift, and go to state 25
    DOUBLE  shift, and go to state 26
    INT     shift, and go to state 27
    OBJECT  shift, and go to state 28

    $default  reduce using rule 22 (args_e)

    arg          go to state 56
    args         go to state 57
    args_e       go to state 118
    type         go to state 59
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33


state 77

   26 variable: IDENT .
   27         | IDENT . '=' expression

    '='  shift, and go to state 47

    $default  reduce using rule 26 (variable)


state 78

   25 variables: variables ',' variable .

    $default  reduce using rule 25 (variables)


state 79

   46 arraytype: basictype LSBracket ',' RSBracket .

    $default  reduce using rule 46 (arraytype)


state 80

   47 arraytype: basictype LSBracket ',' ',' . RSBracket

    RSBracket  shift, and go to state 119


state 81

   44 arraytype: IDENT LSBracket ',' ',' RSBracket .

    $default  reduce using rule 44 (arraytype)


state 82

   21 args: args ',' . arg

    IDENT   shift, and go to state 55
    BOOL    shift, and go to state 25
    DOUBLE  shift, and go to state 26
    INT     shift, and go to state 27
    OBJECT  shift, and go to state 28

    arg          go to state 120
    type         go to state 59
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33


state 83

   14 constructor: accessmodif IDENT '(' @3 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 121


state 84

   19 arg: type IDENT .

    $default  reduce using rule 19 (arg)


state 85

   18 function: accessmodif VOID IDENT '(' @5 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 122


state 86

   86 arrayindex: LSBracket . expression RSBracket
   87           | LSBracket . expression ',' expression RSBracket
   88           | LSBracket . expression ',' expression ',' expression RSBracket

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 123


state 87

   51 expression: IDENT DECREMENT .

    $default  reduce using rule 51 (expression)


state 88

   50 expression: IDENT INCREMENT .

    $default  reduce using rule 50 (expression)


state 89

   62 expression: IDENT '.' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 124


state 90

   59 expression: IDENT '(' . expr_list_e ')'

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    $default  reduce using rule 91 (expr_list_e)

    expression   go to state 125
    expr_list    go to state 126
    expr_list_e  go to state 127


state 91

   57 expression: IDENT arrayindex .
   63           | IDENT arrayindex . '.' expression

    '.'  shift, and go to state 128

    $default  reduce using rule 57 (expression)


state 92

   36 noarraytype: IDENT .
   60 expression: NEW IDENT . '(' expr_list_e ')'

    '('  shift, and go to state 129

    $default  reduce using rule 36 (noarraytype)


state 93

   61 expression: NEW noarraytype . arrayindex

    LSBracket  shift, and go to state 86

    arrayindex  go to state 130


state 94

   37 noarraytype: basictype .

    $default  reduce using rule 37 (noarraytype)


state 95

   64 expression: THIS '.' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 131


state 96

   54 expression: '+' expression .
   58           | expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    $default  reduce using rule 54 (expression)


state 97

   53 expression: '-' expression .
   58           | expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    $default  reduce using rule 53 (expression)


state 98

   52 expression: '!' expression .
   58           | expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    $default  reduce using rule 52 (expression)


state 99

   49 expression: DECREMENT IDENT .

    $default  reduce using rule 49 (expression)


state 100

   48 expression: INCREMENT IDENT .

    $default  reduce using rule 48 (expression)


state 101

   79 expression: '(' basictype . ')' expression

    ')'  shift, and go to state 132


state 102

   55 expression: '(' expression . ')'
   58           | expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    IS   shift, and go to state 103
    '='  shift, and go to state 104
    OR   shift, and go to state 105
    AND  shift, and go to state 106
    NE   shift, and go to state 107
    EQ   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117
    ')'  shift, and go to state 133


state 103

   78 expression: expression IS . type

    IDENT   shift, and go to state 55
    BOOL    shift, and go to state 25
    DOUBLE  shift, and go to state 26
    INT     shift, and go to state 27
    OBJECT  shift, and go to state 28

    type         go to state 134
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33


state 104

   58 expression: expression '=' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 135


state 105

   77 expression: expression OR . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 136


state 106

   76 expression: expression AND . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 137


state 107

   66 expression: expression NE . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 138


state 108

   65 expression: expression EQ . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 139


state 109

   69 expression: expression '>' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 140


state 110

   67 expression: expression '<' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 141


state 111

   68 expression: expression SE . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 142


state 112

   70 expression: expression LE . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 143


state 113

   71 expression: expression '+' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 144


state 114

   72 expression: expression '-' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 145


state 115

   73 expression: expression '*' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 146


state 116

   74 expression: expression '/' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 147


state 117

   75 expression: expression '%' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 148


state 118

   16 function: accessmodif type IDENT '(' @4 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 149


state 119

   47 arraytype: basictype LSBracket ',' ',' RSBracket .

    $default  reduce using rule 47 (arraytype)


state 120

   21 args: args ',' arg .

    $default  reduce using rule 21 (args)


state 121

   14 constructor: accessmodif IDENT '(' @3 args_e ')' '{' . statements '}'

    $default  reduce using rule 103 (statements)

    statements  go to state 150


state 122

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 151


state 123

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type
   86 arrayindex: LSBracket expression . RSBracket
   87           | LSBracket expression . ',' expression RSBracket
   88           | LSBracket expression . ',' expression ',' expression RSBracket

    IS         shift, and go to state 103
    RSBracket  shift, and go to state 152
    '='        shift, and go to state 104
    OR         shift, and go to state 105
    AND        shift, and go to state 106
    NE         shift, and go to state 107
    EQ         shift, and go to state 108
    '>'        shift, and go to state 109
    '<'        shift, and go to state 110
    SE         shift, and go to state 111
    LE         shift, and go to state 112
    '+'        shift, and go to state 113
    '-'        shift, and go to state 114
    '*'        shift, and go to state 115
    '/'        shift, and go to state 116
    '%'        shift, and go to state 117
    ','        shift, and go to state 153


state 124

   58 expression: expression . '=' expression
   62           | IDENT '.' expression .
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    $default  reduce using rule 62 (expression)


state 125

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type
   89 expr_list: expression .

    IS   shift, and go to state 103
    '='  shift, and go to state 104
    OR   shift, and go to state 105
    AND  shift, and go to state 106
    NE   shift, and go to state 107
    EQ   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 89 (expr_list)


state 126

   90 expr_list: expr_list . ',' expression
   92 expr_list_e: expr_list .

    ','  shift, and go to state 154

    $default  reduce using rule 92 (expr_list_e)


state 127

   59 expression: IDENT '(' expr_list_e . ')'

    ')'  shift, and go to state 155


state 128

   63 expression: IDENT arrayindex '.' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 156


state 129

   60 expression: NEW IDENT '(' . expr_list_e ')'

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    $default  reduce using rule 91 (expr_list_e)

    expression   go to state 125
    expr_list    go to state 126
    expr_list_e  go to state 157


state 130

   61 expression: NEW noarraytype arrayindex .

    $default  reduce using rule 61 (expression)


state 131

   58 expression: expression . '=' expression
   64           | THIS '.' expression .
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    $default  reduce using rule 64 (expression)


state 132

   79 expression: '(' basictype ')' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 158


state 133

   55 expression: '(' expression ')' .

    $default  reduce using rule 55 (expression)


state 134

   78 expression: expression IS type .

    $default  reduce using rule 78 (expression)


state 135

   58 expression: expression . '=' expression
   58           | expression '=' expression .
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    IS   shift, and go to state 103
    '='  shift, and go to state 104
    OR   shift, and go to state 105
    AND  shift, and go to state 106
    NE   shift, and go to state 107
    EQ   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 58 (expression)


state 136

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   77           | expression OR expression .
   78           | expression . IS type

    IS   shift, and go to state 103
    AND  shift, and go to state 106
    NE   shift, and go to state 107
    EQ   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 77 (expression)


state 137

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   76           | expression AND expression .
   77           | expression . OR expression
   78           | expression . IS type

    IS   shift, and go to state 103
    NE   shift, and go to state 107
    EQ   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 76 (expression)


state 138

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   66           | expression NE expression .
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    IS   shift, and go to state 103
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 66 (expression)


state 139

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   65           | expression EQ expression .
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    IS   shift, and go to state 103
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 65 (expression)


state 140

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   69           | expression '>' expression .
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 69 (expression)


state 141

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   67           | expression '<' expression .
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 67 (expression)


state 142

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   68           | expression SE expression .
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 68 (expression)


state 143

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   70           | expression LE expression .
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 70 (expression)


state 144

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   71           | expression '+' expression .
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 71 (expression)


state 145

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   72           | expression '-' expression .
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 72 (expression)


state 146

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   73           | expression '*' expression .
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    $default  reduce using rule 73 (expression)


state 147

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   74           | expression '/' expression .
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    $default  reduce using rule 74 (expression)


state 148

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   75           | expression '%' expression .
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    $default  reduce using rule 75 (expression)


state 149

   16 function: accessmodif type IDENT '(' @4 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 159


state 150

   14 constructor: accessmodif IDENT '(' @3 args_e ')' '{' statements . '}'
  104 statements: statements . statement

    IDENT      shift, and go to state 160
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 25
    DOUBLE     shift, and go to state 26
    INT        shift, and go to state 27
    OBJECT     shift, and go to state 28
    IF         shift, and go to state 161
    WHILE      shift, and go to state 162
    FOR        shift, and go to state 163
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 164
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 165
    '}'        shift, and go to state 166
    ';'        shift, and go to state 167

    type         go to state 168
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33
    expression   go to state 169
    statement    go to state 170


state 151

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' '{' . statements '}'

    $default  reduce using rule 103 (statements)

    statements  go to state 171


state 152

   86 arrayindex: LSBracket expression RSBracket .

    $default  reduce using rule 86 (arrayindex)


state 153

   87 arrayindex: LSBracket expression ',' . expression RSBracket
   88           | LSBracket expression ',' . expression ',' expression RSBracket

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 172


state 154

   90 expr_list: expr_list ',' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 173


state 155

   59 expression: IDENT '(' expr_list_e ')' .

    $default  reduce using rule 59 (expression)


state 156

   58 expression: expression . '=' expression
   63           | IDENT arrayindex '.' expression .
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type

    $default  reduce using rule 63 (expression)


state 157

   60 expression: NEW IDENT '(' expr_list_e . ')'

    ')'  shift, and go to state 174


state 158

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type
   79           | '(' basictype ')' expression .

    IS   shift, and go to state 103
    OR   shift, and go to state 105
    AND  shift, and go to state 106
    NE   shift, and go to state 107
    EQ   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 79 (expression)


state 159

   16 function: accessmodif type IDENT '(' @4 args_e ')' '{' . statements '}'

    $default  reduce using rule 103 (statements)

    statements  go to state 175


state 160

   36 noarraytype: IDENT .
   42 arraytype: IDENT . LSBracket RSBracket
   43          | IDENT . LSBracket ',' RSBracket
   44          | IDENT . LSBracket ',' ',' RSBracket
   50 expression: IDENT . INCREMENT
   51           | IDENT . DECREMENT
   56           | IDENT .
   57           | IDENT . arrayindex
   59           | IDENT . '(' expr_list_e ')'
   62           | IDENT . '.' expression
   63           | IDENT . arrayindex '.' expression

    LSBracket  shift, and go to state 176
    DECREMENT  shift, and go to state 87
    INCREMENT  shift, and go to state 88
    '.'        shift, and go to state 89
    '('        shift, and go to state 90

    IDENT     reduce using rule 36 (noarraytype)
    $default  reduce using rule 56 (expression)

    arrayindex  go to state 91


state 161

   93 statement: IF . '(' expression ')' statement
   94          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 177


state 162

   95 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 178


state 163

   96 statement: FOR . '(' variables_e ';' expr_e ';' expr_e ')' statement

    '('  shift, and go to state 179


state 164

  102 statement: RETURN . expr_e ';'

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    $default  reduce using rule 108 (expr_e)

    expression  go to state 180
    expr_e      go to state 181


state 165

  101 statement: '{' . @6 statements '}'

    $default  reduce using rule 100 (@6)

    @6  go to state 182


state 166

   14 constructor: accessmodif IDENT '(' @3 args_e ')' '{' statements '}' .

    $default  reduce using rule 14 (constructor)


state 167

   99 statement: ';' .

    $default  reduce using rule 99 (statement)


state 168

   98 statement: type . variables ';'

    IDENT  shift, and go to state 77

    variables  go to state 183
    variable   go to state 40


state 169

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type
   97 statement: expression . ';'

    IS   shift, and go to state 103
    '='  shift, and go to state 104
    OR   shift, and go to state 105
    AND  shift, and go to state 106
    NE   shift, and go to state 107
    EQ   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117
    ';'  shift, and go to state 184


state 170

  104 statements: statements statement .

    $default  reduce using rule 104 (statements)


state 171

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' '{' statements . '}'
  104 statements: statements . statement

    IDENT      shift, and go to state 160
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 25
    DOUBLE     shift, and go to state 26
    INT        shift, and go to state 27
    OBJECT     shift, and go to state 28
    IF         shift, and go to state 161
    WHILE      shift, and go to state 162
    FOR        shift, and go to state 163
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 164
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 165
    '}'        shift, and go to state 185
    ';'        shift, and go to state 167

    type         go to state 168
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33
    expression   go to state 169
    statement    go to state 170


state 172

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type
   87 arrayindex: LSBracket expression ',' expression . RSBracket
   88           | LSBracket expression ',' expression . ',' expression RSBracket

    IS         shift, and go to state 103
    RSBracket  shift, and go to state 186
    '='        shift, and go to state 104
    OR         shift, and go to state 105
    AND        shift, and go to state 106
    NE         shift, and go to state 107
    EQ         shift, and go to state 108
    '>'        shift, and go to state 109
    '<'        shift, and go to state 110
    SE         shift, and go to state 111
    LE         shift, and go to state 112
    '+'        shift, and go to state 113
    '-'        shift, and go to state 114
    '*'        shift, and go to state 115
    '/'        shift, and go to state 116
    '%'        shift, and go to state 117
    ','        shift, and go to state 187


state 173

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type
   90 expr_list: expr_list ',' expression .

    IS   shift, and go to state 103
    '='  shift, and go to state 104
    OR   shift, and go to state 105
    AND  shift, and go to state 106
    NE   shift, and go to state 107
    EQ   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 90 (expr_list)


state 174

   60 expression: NEW IDENT '(' expr_list_e ')' .

    $default  reduce using rule 60 (expression)


state 175

   16 function: accessmodif type IDENT '(' @4 args_e ')' '{' statements . '}'
  104 statements: statements . statement

    IDENT      shift, and go to state 160
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 25
    DOUBLE     shift, and go to state 26
    INT        shift, and go to state 27
    OBJECT     shift, and go to state 28
    IF         shift, and go to state 161
    WHILE      shift, and go to state 162
    FOR        shift, and go to state 163
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 164
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 165
    '}'        shift, and go to state 188
    ';'        shift, and go to state 167

    type         go to state 168
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33
    expression   go to state 169
    statement    go to state 170


state 176

   42 arraytype: IDENT LSBracket . RSBracket
   43          | IDENT LSBracket . ',' RSBracket
   44          | IDENT LSBracket . ',' ',' RSBracket
   86 arrayindex: LSBracket . expression RSBracket
   87           | LSBracket . expression ',' expression RSBracket
   88           | LSBracket . expression ',' expression ',' expression RSBracket

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RSBracket  shift, and go to state 43
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    ','        shift, and go to state 44

    expression  go to state 123


state 177

   93 statement: IF '(' . expression ')' statement
   94          | IF '(' . expression ')' statement ELSE statement

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 189


state 178

   95 statement: WHILE '(' . expression ')' statement

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 190


state 179

   96 statement: FOR '(' . variables_e ';' expr_e ';' expr_e ')' statement

    IDENT   shift, and go to state 191
    BOOL    shift, and go to state 25
    DOUBLE  shift, and go to state 26
    INT     shift, and go to state 27
    OBJECT  shift, and go to state 28

    $default  reduce using rule 105 (variables_e)

    variables    go to state 192
    variable     go to state 40
    type         go to state 193
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33
    variables_e  go to state 194


state 180

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type
  109 expr_e: expression .

    IS   shift, and go to state 103
    '='  shift, and go to state 104
    OR   shift, and go to state 105
    AND  shift, and go to state 106
    NE   shift, and go to state 107
    EQ   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 109 (expr_e)


state 181

  102 statement: RETURN expr_e . ';'

    ';'  shift, and go to state 195


state 182

  101 statement: '{' @6 . statements '}'

    $default  reduce using rule 103 (statements)

    statements  go to state 196


state 183

   25 variables: variables . ',' variable
   98 statement: type variables . ';'

    ';'  shift, and go to state 197
    ','  shift, and go to state 50


state 184

   97 statement: expression ';' .

    $default  reduce using rule 97 (statement)


state 185

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' '{' statements '}' .

    $default  reduce using rule 18 (function)


state 186

   87 arrayindex: LSBracket expression ',' expression RSBracket .

    $default  reduce using rule 87 (arrayindex)


state 187

   88 arrayindex: LSBracket expression ',' expression ',' . expression RSBracket

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression  go to state 198


state 188

   16 function: accessmodif type IDENT '(' @4 args_e ')' '{' statements '}' .

    $default  reduce using rule 16 (function)


state 189

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type
   93 statement: IF '(' expression . ')' statement
   94          | IF '(' expression . ')' statement ELSE statement

    IS   shift, and go to state 103
    '='  shift, and go to state 104
    OR   shift, and go to state 105
    AND  shift, and go to state 106
    NE   shift, and go to state 107
    EQ   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117
    ')'  shift, and go to state 199


state 190

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type
   95 statement: WHILE '(' expression . ')' statement

    IS   shift, and go to state 103
    '='  shift, and go to state 104
    OR   shift, and go to state 105
    AND  shift, and go to state 106
    NE   shift, and go to state 107
    EQ   shift, and go to state 108
    '>'  shift, and go to state 109
    '<'  shift, and go to state 110
    SE   shift, and go to state 111
    LE   shift, and go to state 112
    '+'  shift, and go to state 113
    '-'  shift, and go to state 114
    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117
    ')'  shift, and go to state 200


state 191

   26 variable: IDENT .
   27         | IDENT . '=' expression
   36 noarraytype: IDENT .
   42 arraytype: IDENT . LSBracket RSBracket
   43          | IDENT . LSBracket ',' RSBracket
   44          | IDENT . LSBracket ',' ',' RSBracket

    LSBracket  shift, and go to state 35
    '='        shift, and go to state 47

    IDENT     reduce using rule 36 (noarraytype)
    $default  reduce using rule 26 (variable)


state 192

   25 variables: variables . ',' variable
  107 variables_e: variables .

    ','  shift, and go to state 50

    $default  reduce using rule 107 (variables_e)


state 193

  106 variables_e: type . variables

    IDENT  shift, and go to state 77

    variables  go to state 201
    variable   go to state 40


state 194

   96 statement: FOR '(' variables_e . ';' expr_e ';' expr_e ')' statement

    ';'  shift, and go to state 202


state 195

  102 statement: RETURN expr_e ';' .

    $default  reduce using rule 102 (statement)


state 196

  101 statement: '{' @6 statements . '}'
  104 statements: statements . statement

    IDENT      shift, and go to state 160
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 25
    DOUBLE     shift, and go to state 26
    INT        shift, and go to state 27
    OBJECT     shift, and go to state 28
    IF         shift, and go to state 161
    WHILE      shift, and go to state 162
    FOR        shift, and go to state 163
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 164
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 165
    '}'        shift, and go to state 203
    ';'        shift, and go to state 167

    type         go to state 168
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33
    expression   go to state 169
    statement    go to state 170


state 197

   98 statement: type variables ';' .

    $default  reduce using rule 98 (statement)


state 198

   58 expression: expression . '=' expression
   65           | expression . EQ expression
   66           | expression . NE expression
   67           | expression . '<' expression
   68           | expression . SE expression
   69           | expression . '>' expression
   70           | expression . LE expression
   71           | expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '%' expression
   76           | expression . AND expression
   77           | expression . OR expression
   78           | expression . IS type
   88 arrayindex: LSBracket expression ',' expression ',' expression . RSBracket

    IS         shift, and go to state 103
    RSBracket  shift, and go to state 204
    '='        shift, and go to state 104
    OR         shift, and go to state 105
    AND        shift, and go to state 106
    NE         shift, and go to state 107
    EQ         shift, and go to state 108
    '>'        shift, and go to state 109
    '<'        shift, and go to state 110
    SE         shift, and go to state 111
    LE         shift, and go to state 112
    '+'        shift, and go to state 113
    '-'        shift, and go to state 114
    '*'        shift, and go to state 115
    '/'        shift, and go to state 116
    '%'        shift, and go to state 117


state 199

   93 statement: IF '(' expression ')' . statement
   94          | IF '(' expression ')' . statement ELSE statement

    IDENT      shift, and go to state 160
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 25
    DOUBLE     shift, and go to state 26
    INT        shift, and go to state 27
    OBJECT     shift, and go to state 28
    IF         shift, and go to state 161
    WHILE      shift, and go to state 162
    FOR        shift, and go to state 163
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 164
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 165
    ';'        shift, and go to state 167

    type         go to state 168
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33
    expression   go to state 169
    statement    go to state 205


state 200

   95 statement: WHILE '(' expression ')' . statement

    IDENT      shift, and go to state 160
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 25
    DOUBLE     shift, and go to state 26
    INT        shift, and go to state 27
    OBJECT     shift, and go to state 28
    IF         shift, and go to state 161
    WHILE      shift, and go to state 162
    FOR        shift, and go to state 163
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 164
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 165
    ';'        shift, and go to state 167

    type         go to state 168
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33
    expression   go to state 169
    statement    go to state 206


state 201

   25 variables: variables . ',' variable
  106 variables_e: type variables .

    ','  shift, and go to state 50

    $default  reduce using rule 106 (variables_e)


state 202

   96 statement: FOR '(' variables_e ';' . expr_e ';' expr_e ')' statement

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    $default  reduce using rule 108 (expr_e)

    expression  go to state 180
    expr_e      go to state 207


state 203

  101 statement: '{' @6 statements '}' .

    $default  reduce using rule 101 (statement)


state 204

   88 arrayindex: LSBracket expression ',' expression ',' expression RSBracket .

    $default  reduce using rule 88 (arrayindex)


state 205

   93 statement: IF '(' expression ')' statement .
   94          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 208

    $default  reduce using rule 93 (statement)


state 206

   95 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 95 (statement)


state 207

   96 statement: FOR '(' variables_e ';' expr_e . ';' expr_e ')' statement

    ';'  shift, and go to state 209


state 208

   94 statement: IF '(' expression ')' statement ELSE . statement

    IDENT      shift, and go to state 160
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 25
    DOUBLE     shift, and go to state 26
    INT        shift, and go to state 27
    OBJECT     shift, and go to state 28
    IF         shift, and go to state 161
    WHILE      shift, and go to state 162
    FOR        shift, and go to state 163
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 164
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 165
    ';'        shift, and go to state 167

    type         go to state 168
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33
    expression   go to state 169
    statement    go to state 210


state 209

   96 statement: FOR '(' variables_e ';' expr_e ';' . expr_e ')' statement

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    $default  reduce using rule 108 (expr_e)

    expression  go to state 180
    expr_e      go to state 211


state 210

   94 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 94 (statement)


state 211

   96 statement: FOR '(' variables_e ';' expr_e ';' expr_e . ')' statement

    ')'  shift, and go to state 212


state 212

   96 statement: FOR '(' variables_e ';' expr_e ';' expr_e ')' . statement

    IDENT      shift, and go to state 160
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 25
    DOUBLE     shift, and go to state 26
    INT        shift, and go to state 27
    OBJECT     shift, and go to state 28
    IF         shift, and go to state 161
    WHILE      shift, and go to state 162
    FOR        shift, and go to state 163
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 164
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 165
    ';'        shift, and go to state 167

    type         go to state 168
    noarraytype  go to state 31
    basictype    go to state 32
    arraytype    go to state 33
    expression   go to state 169
    statement    go to state 213


state 213

   96 statement: FOR '(' variables_e ';' expr_e ';' expr_e ')' statement .

    $default  reduce using rule 96 (statement)
