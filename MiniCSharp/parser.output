Grammar

    0 $accept: root $end

    1 root: /* empty */
    2     | root class

    3 @1: /* empty */

    4 class: CLASS IDENT '{' @1 members '}'

    5 @2: /* empty */

    6 class: CLASS IDENT ':' IDENT '{' @2 members '}'

    7 members: /* empty */
    8        | members member

    9 member: global
   10       | constructor
   11       | function

   12 global: accessmodif type variables ';'

   13 @3: /* empty */

   14 constructor: accessmodif IDENT '(' @3 args_e ')' '{' statements '}'

   15 @4: /* empty */

   16 function: accessmodif type IDENT '(' @4 args_e ')' '{' statements '}'

   17 @5: /* empty */

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' '{' statements '}'

   19 arg: type IDENT

   20 args: arg
   21     | args ',' arg

   22 args_e: /* empty */
   23       | args

   24 variables: variable
   25          | variables ',' variable

   26 variable: IDENT
   27         | IDENT '=' expression

   28 accessmodif: /* empty */
   29            | PRIVATE
   30            | STATIC
   31            | PRIVATE STATIC

   32 type: noarraytype
   33     | arraytype

   34 noarraytype: IDENT
   35            | basictype

   36 basictype: INT
   37          | DOUBLE
   38          | BOOL
   39          | OBJECT

   40 arraytype: IDENT '[' ']'
   41          | IDENT '[' ',' ']'
   42          | IDENT '[' ',' ',' ']'
   43          | basictype '[' ']'
   44          | basictype '[' ',' ']'
   45          | basictype '[' ',' ',' ']'

   46 expression: INCREMENT IDENT
   47           | DECREMENT IDENT
   48           | IDENT INCREMENT
   49           | IDENT DECREMENT
   50           | '!' expression
   51           | '-' expression
   52           | '+' expression
   53           | '(' expression ')'
   54           | IDENT
   55           | IDENT arrayindex
   56           | IDENT '=' expression
   57           | IDENT arrayindex '=' expression
   58           | IDENT '(' expr_list_e ')'
   59           | NEW IDENT '(' expr_list_e ')'
   60           | NEW noarraytype arrayindex
   61           | IDENT '.' expression
   62           | IDENT arrayindex '.' expression
   63           | expression EQ expression
   64           | expression NE expression
   65           | expression '<' expression
   66           | expression SE expression
   67           | expression '>' expression
   68           | expression LE expression
   69           | expression '+' expression
   70           | expression '-' expression
   71           | expression '*' expression
   72           | expression '/' expression
   73           | expression '%' expression
   74           | expression AND expression
   75           | expression OR expression
   76           | expression IS type
   77           | '(' basictype ')' expression
   78           | INTEGER
   79           | REAL
   80           | TRUE
   81           | FALSE
   82           | THIS
   83           | NUL

   84 arrayindex: '[' expression ']'
   85           | '[' expression ',' expression ']'
   86           | '[' expression ',' expression ',' expression ']'

   87 expr_list: expression
   88          | expr_list ',' expression

   89 expr_list_e: /* empty */
   90            | expr_list

   91 statement: IF '(' expression ')' statement
   92          | IF '(' expression ')' statement ELSE statement
   93          | WHILE '(' expression ')' statement
   94          | FOR '(' variables_e ';' expr_e ';' expr_e ')' statement
   95          | expression ';'
   96          | type variables ';'
   97          | ';'

   98 @6: /* empty */

   99 statement: '{' @6 statements '}'
  100          | RETURN expr_e ';'

  101 statements: /* empty */
  102           | statements statement

  103 variables_e: /* empty */
  104            | type variables
  105            | variables

  106 expr_e: /* empty */
  107       | expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 50
'%' (37) 73
'(' (40) 14 16 18 53 58 59 77 91 92 93 94
')' (41) 14 16 18 53 58 59 77 91 92 93 94
'*' (42) 71
'+' (43) 52 69
',' (44) 21 25 41 42 44 45 85 86 88
'-' (45) 51 70
'.' (46) 61 62
'/' (47) 72
':' (58) 6
';' (59) 12 94 95 96 97 100
'<' (60) 65
'=' (61) 27 56 57
'>' (62) 67
'[' (91) 40 41 42 43 44 45 84 85 86
']' (93) 40 41 42 43 44 45 84 85 86
'{' (123) 4 6 14 16 18 99
'}' (125) 4 6 14 16 18 99
error (256)
IDENT (258) 4 6 14 16 18 19 26 27 34 40 41 42 46 47 48 49 54 55 56
    57 58 59 61 62
INTEGER (259) 78
REAL (260) 79
CLASS (261) 4 6
BOOL (262) 38
DOUBLE (263) 37
INT (264) 36
IS (265) 76
OBJECT (266) 39
IF (267) 91 92
ELSE (268) 92
WHILE (269) 93
FOR (270) 94
FALSE (271) 81
TRUE (272) 80
NEW (273) 59 60
THIS (274) 82
NUL (275) 83
PRIVATE (276) 29 31
STATIC (277) 30 31
VOID (278) 18
RETURN (279) 100
IF_PREC (280)
CAST (281)
OR (282) 75
AND (283) 74
NE (284) 64
EQ (285) 63
SE (286) 66
LE (287) 68
UNARY_OP (288)
DECREMENT (289) 47 49
INCREMENT (290) 46 48


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
root (56)
    on left: 1 2, on right: 0 2
class (57)
    on left: 4 6, on right: 2
@1 (58)
    on left: 3, on right: 4
@2 (59)
    on left: 5, on right: 6
members (60)
    on left: 7 8, on right: 4 6 8
member (61)
    on left: 9 10 11, on right: 8
global (62)
    on left: 12, on right: 9
constructor (63)
    on left: 14, on right: 10
@3 (64)
    on left: 13, on right: 14
function (65)
    on left: 16 18, on right: 11
@4 (66)
    on left: 15, on right: 16
@5 (67)
    on left: 17, on right: 18
arg (68)
    on left: 19, on right: 20 21
args (69)
    on left: 20 21, on right: 21 23
args_e (70)
    on left: 22 23, on right: 14 16 18
variables (71)
    on left: 24 25, on right: 12 25 96 104 105
variable (72)
    on left: 26 27, on right: 24 25
accessmodif (73)
    on left: 28 29 30 31, on right: 12 14 16 18
type (74)
    on left: 32 33, on right: 12 16 19 76 96 104
noarraytype (75)
    on left: 34 35, on right: 32 60
basictype (76)
    on left: 36 37 38 39, on right: 35 43 44 45 77
arraytype (77)
    on left: 40 41 42 43 44 45, on right: 33
expression (78)
    on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
    64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83,
    on right: 27 50 51 52 53 56 57 61 62 63 64 65 66 67 68 69 70 71
    72 73 74 75 76 77 84 85 86 87 88 91 92 93 95 107
arrayindex (79)
    on left: 84 85 86, on right: 55 57 60 62
expr_list (80)
    on left: 87 88, on right: 88 90
expr_list_e (81)
    on left: 89 90, on right: 58 59
statement (82)
    on left: 91 92 93 94 95 96 97 99 100, on right: 91 92 93 94 102
@6 (83)
    on left: 98, on right: 99
statements (84)
    on left: 101 102, on right: 14 16 18 99 102
variables_e (85)
    on left: 103 104 105, on right: 94
expr_e (86)
    on left: 106 107, on right: 94 100


state 0

    0 $accept: . root $end

    $default  reduce using rule 1 (root)

    root  go to state 1


state 1

    0 $accept: root . $end
    2 root: root . class

    $end   shift, and go to state 2
    CLASS  shift, and go to state 3

    class  go to state 4


state 2

    0 $accept: root $end .

    $default  accept


state 3

    4 class: CLASS . IDENT '{' @1 members '}'
    6      | CLASS . IDENT ':' IDENT '{' @2 members '}'

    IDENT  shift, and go to state 5


state 4

    2 root: root class .

    $default  reduce using rule 2 (root)


state 5

    4 class: CLASS IDENT . '{' @1 members '}'
    6      | CLASS IDENT . ':' IDENT '{' @2 members '}'

    '{'  shift, and go to state 6
    ':'  shift, and go to state 7


state 6

    4 class: CLASS IDENT '{' . @1 members '}'

    $default  reduce using rule 3 (@1)

    @1  go to state 8


state 7

    6 class: CLASS IDENT ':' . IDENT '{' @2 members '}'

    IDENT  shift, and go to state 9


state 8

    4 class: CLASS IDENT '{' @1 . members '}'

    $default  reduce using rule 7 (members)

    members  go to state 10


state 9

    6 class: CLASS IDENT ':' IDENT . '{' @2 members '}'

    '{'  shift, and go to state 11


state 10

    4 class: CLASS IDENT '{' @1 members . '}'
    8 members: members . member

    PRIVATE  shift, and go to state 12
    STATIC   shift, and go to state 13
    '}'      shift, and go to state 14

    $default  reduce using rule 28 (accessmodif)

    member       go to state 15
    global       go to state 16
    constructor  go to state 17
    function     go to state 18
    accessmodif  go to state 19


state 11

    6 class: CLASS IDENT ':' IDENT '{' . @2 members '}'

    $default  reduce using rule 5 (@2)

    @2  go to state 20


state 12

   29 accessmodif: PRIVATE .
   31            | PRIVATE . STATIC

    STATIC  shift, and go to state 21

    $default  reduce using rule 29 (accessmodif)


state 13

   30 accessmodif: STATIC .

    $default  reduce using rule 30 (accessmodif)


state 14

    4 class: CLASS IDENT '{' @1 members '}' .

    $default  reduce using rule 4 (class)


state 15

    8 members: members member .

    $default  reduce using rule 8 (members)


state 16

    9 member: global .

    $default  reduce using rule 9 (member)


state 17

   10 member: constructor .

    $default  reduce using rule 10 (member)


state 18

   11 member: function .

    $default  reduce using rule 11 (member)


state 19

   12 global: accessmodif . type variables ';'
   14 constructor: accessmodif . IDENT '(' @3 args_e ')' '{' statements '}'
   16 function: accessmodif . type IDENT '(' @4 args_e ')' '{' statements '}'
   18         | accessmodif . VOID IDENT '(' @5 args_e ')' '{' statements '}'

    IDENT   shift, and go to state 22
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26
    VOID    shift, and go to state 27

    type         go to state 28
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 20

    6 class: CLASS IDENT ':' IDENT '{' @2 . members '}'

    $default  reduce using rule 7 (members)

    members  go to state 32


state 21

   31 accessmodif: PRIVATE STATIC .

    $default  reduce using rule 31 (accessmodif)


state 22

   14 constructor: accessmodif IDENT . '(' @3 args_e ')' '{' statements '}'
   34 noarraytype: IDENT .
   40 arraytype: IDENT . '[' ']'
   41          | IDENT . '[' ',' ']'
   42          | IDENT . '[' ',' ',' ']'

    '('  shift, and go to state 33
    '['  shift, and go to state 34

    $default  reduce using rule 34 (noarraytype)


state 23

   38 basictype: BOOL .

    $default  reduce using rule 38 (basictype)


state 24

   37 basictype: DOUBLE .

    $default  reduce using rule 37 (basictype)


state 25

   36 basictype: INT .

    $default  reduce using rule 36 (basictype)


state 26

   39 basictype: OBJECT .

    $default  reduce using rule 39 (basictype)


state 27

   18 function: accessmodif VOID . IDENT '(' @5 args_e ')' '{' statements '}'

    IDENT  shift, and go to state 35


state 28

   12 global: accessmodif type . variables ';'
   16 function: accessmodif type . IDENT '(' @4 args_e ')' '{' statements '}'

    IDENT  shift, and go to state 36

    variables  go to state 37
    variable   go to state 38


state 29

   32 type: noarraytype .

    $default  reduce using rule 32 (type)


state 30

   35 noarraytype: basictype .
   43 arraytype: basictype . '[' ']'
   44          | basictype . '[' ',' ']'
   45          | basictype . '[' ',' ',' ']'

    '['  shift, and go to state 39

    $default  reduce using rule 35 (noarraytype)


state 31

   33 type: arraytype .

    $default  reduce using rule 33 (type)


state 32

    6 class: CLASS IDENT ':' IDENT '{' @2 members . '}'
    8 members: members . member

    PRIVATE  shift, and go to state 12
    STATIC   shift, and go to state 13
    '}'      shift, and go to state 40

    $default  reduce using rule 28 (accessmodif)

    member       go to state 15
    global       go to state 16
    constructor  go to state 17
    function     go to state 18
    accessmodif  go to state 19


state 33

   14 constructor: accessmodif IDENT '(' . @3 args_e ')' '{' statements '}'

    $default  reduce using rule 13 (@3)

    @3  go to state 41


state 34

   40 arraytype: IDENT '[' . ']'
   41          | IDENT '[' . ',' ']'
   42          | IDENT '[' . ',' ',' ']'

    ','  shift, and go to state 42
    ']'  shift, and go to state 43


state 35

   18 function: accessmodif VOID IDENT . '(' @5 args_e ')' '{' statements '}'

    '('  shift, and go to state 44


state 36

   16 function: accessmodif type IDENT . '(' @4 args_e ')' '{' statements '}'
   26 variable: IDENT .
   27         | IDENT . '=' expression

    '='  shift, and go to state 45
    '('  shift, and go to state 46

    $default  reduce using rule 26 (variable)


state 37

   12 global: accessmodif type variables . ';'
   25 variables: variables . ',' variable

    ';'  shift, and go to state 47
    ','  shift, and go to state 48


state 38

   24 variables: variable .

    $default  reduce using rule 24 (variables)


state 39

   43 arraytype: basictype '[' . ']'
   44          | basictype '[' . ',' ']'
   45          | basictype '[' . ',' ',' ']'

    ','  shift, and go to state 49
    ']'  shift, and go to state 50


state 40

    6 class: CLASS IDENT ':' IDENT '{' @2 members '}' .

    $default  reduce using rule 6 (class)


state 41

   14 constructor: accessmodif IDENT '(' @3 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 51
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    $default  reduce using rule 22 (args_e)

    arg          go to state 52
    args         go to state 53
    args_e       go to state 54
    type         go to state 55
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 42

   41 arraytype: IDENT '[' ',' . ']'
   42          | IDENT '[' ',' . ',' ']'

    ','  shift, and go to state 56
    ']'  shift, and go to state 57


state 43

   40 arraytype: IDENT '[' ']' .

    $default  reduce using rule 40 (arraytype)


state 44

   18 function: accessmodif VOID IDENT '(' . @5 args_e ')' '{' statements '}'

    $default  reduce using rule 17 (@5)

    @5  go to state 58


state 45

   27 variable: IDENT '=' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 73


state 46

   16 function: accessmodif type IDENT '(' . @4 args_e ')' '{' statements '}'

    $default  reduce using rule 15 (@4)

    @4  go to state 74


state 47

   12 global: accessmodif type variables ';' .

    $default  reduce using rule 12 (global)


state 48

   25 variables: variables ',' . variable

    IDENT  shift, and go to state 75

    variable  go to state 76


state 49

   44 arraytype: basictype '[' ',' . ']'
   45          | basictype '[' ',' . ',' ']'

    ','  shift, and go to state 77
    ']'  shift, and go to state 78


state 50

   43 arraytype: basictype '[' ']' .

    $default  reduce using rule 43 (arraytype)


state 51

   34 noarraytype: IDENT .
   40 arraytype: IDENT . '[' ']'
   41          | IDENT . '[' ',' ']'
   42          | IDENT . '[' ',' ',' ']'

    '['  shift, and go to state 34

    $default  reduce using rule 34 (noarraytype)


state 52

   20 args: arg .

    $default  reduce using rule 20 (args)


state 53

   21 args: args . ',' arg
   23 args_e: args .

    ','  shift, and go to state 79

    $default  reduce using rule 23 (args_e)


state 54

   14 constructor: accessmodif IDENT '(' @3 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 80


state 55

   19 arg: type . IDENT

    IDENT  shift, and go to state 81


state 56

   42 arraytype: IDENT '[' ',' ',' . ']'

    ']'  shift, and go to state 82


state 57

   41 arraytype: IDENT '[' ',' ']' .

    $default  reduce using rule 41 (arraytype)


state 58

   18 function: accessmodif VOID IDENT '(' @5 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 51
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    $default  reduce using rule 22 (args_e)

    arg          go to state 52
    args         go to state 53
    args_e       go to state 83
    type         go to state 55
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 59

   48 expression: IDENT . INCREMENT
   49           | IDENT . DECREMENT
   54           | IDENT .
   55           | IDENT . arrayindex
   56           | IDENT . '=' expression
   57           | IDENT . arrayindex '=' expression
   58           | IDENT . '(' expr_list_e ')'
   61           | IDENT . '.' expression
   62           | IDENT . arrayindex '.' expression

    '='        shift, and go to state 84
    DECREMENT  shift, and go to state 85
    INCREMENT  shift, and go to state 86
    '.'        shift, and go to state 87
    '('        shift, and go to state 88
    '['        shift, and go to state 89

    $default  reduce using rule 54 (expression)

    arrayindex  go to state 90


state 60

   78 expression: INTEGER .

    $default  reduce using rule 78 (expression)


state 61

   79 expression: REAL .

    $default  reduce using rule 79 (expression)


state 62

   81 expression: FALSE .

    $default  reduce using rule 81 (expression)


state 63

   80 expression: TRUE .

    $default  reduce using rule 80 (expression)


state 64

   59 expression: NEW . IDENT '(' expr_list_e ')'
   60           | NEW . noarraytype arrayindex

    IDENT   shift, and go to state 91
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    noarraytype  go to state 92
    basictype    go to state 93


state 65

   82 expression: THIS .

    $default  reduce using rule 82 (expression)


state 66

   83 expression: NUL .

    $default  reduce using rule 83 (expression)


state 67

   52 expression: '+' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 94


state 68

   51 expression: '-' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 95


state 69

   50 expression: '!' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 96


state 70

   47 expression: DECREMENT . IDENT

    IDENT  shift, and go to state 97


state 71

   46 expression: INCREMENT . IDENT

    IDENT  shift, and go to state 98


state 72

   53 expression: '(' . expression ')'
   77           | '(' . basictype ')' expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    basictype   go to state 99
    expression  go to state 100


state 73

   27 variable: IDENT '=' expression .
   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 27 (variable)


state 74

   16 function: accessmodif type IDENT '(' @4 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 51
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    $default  reduce using rule 22 (args_e)

    arg          go to state 52
    args         go to state 53
    args_e       go to state 115
    type         go to state 55
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 75

   26 variable: IDENT .
   27         | IDENT . '=' expression

    '='  shift, and go to state 45

    $default  reduce using rule 26 (variable)


state 76

   25 variables: variables ',' variable .

    $default  reduce using rule 25 (variables)


state 77

   45 arraytype: basictype '[' ',' ',' . ']'

    ']'  shift, and go to state 116


state 78

   44 arraytype: basictype '[' ',' ']' .

    $default  reduce using rule 44 (arraytype)


state 79

   21 args: args ',' . arg

    IDENT   shift, and go to state 51
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    arg          go to state 117
    type         go to state 55
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 80

   14 constructor: accessmodif IDENT '(' @3 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 118


state 81

   19 arg: type IDENT .

    $default  reduce using rule 19 (arg)


state 82

   42 arraytype: IDENT '[' ',' ',' ']' .

    $default  reduce using rule 42 (arraytype)


state 83

   18 function: accessmodif VOID IDENT '(' @5 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 119


state 84

   56 expression: IDENT '=' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 120


state 85

   49 expression: IDENT DECREMENT .

    $default  reduce using rule 49 (expression)


state 86

   48 expression: IDENT INCREMENT .

    $default  reduce using rule 48 (expression)


state 87

   61 expression: IDENT '.' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 121


state 88

   58 expression: IDENT '(' . expr_list_e ')'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 89 (expr_list_e)

    expression   go to state 122
    expr_list    go to state 123
    expr_list_e  go to state 124


state 89

   84 arrayindex: '[' . expression ']'
   85           | '[' . expression ',' expression ']'
   86           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 125


state 90

   55 expression: IDENT arrayindex .
   57           | IDENT arrayindex . '=' expression
   62           | IDENT arrayindex . '.' expression

    '='  shift, and go to state 126
    '.'  shift, and go to state 127

    $default  reduce using rule 55 (expression)


state 91

   34 noarraytype: IDENT .
   59 expression: NEW IDENT . '(' expr_list_e ')'

    '('  shift, and go to state 128

    $default  reduce using rule 34 (noarraytype)


state 92

   60 expression: NEW noarraytype . arrayindex

    '['  shift, and go to state 89

    arrayindex  go to state 129


state 93

   35 noarraytype: basictype .

    $default  reduce using rule 35 (noarraytype)


state 94

   52 expression: '+' expression .
   63           | expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    $default  reduce using rule 52 (expression)


state 95

   51 expression: '-' expression .
   63           | expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    $default  reduce using rule 51 (expression)


state 96

   50 expression: '!' expression .
   63           | expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    $default  reduce using rule 50 (expression)


state 97

   47 expression: DECREMENT IDENT .

    $default  reduce using rule 47 (expression)


state 98

   46 expression: INCREMENT IDENT .

    $default  reduce using rule 46 (expression)


state 99

   77 expression: '(' basictype . ')' expression

    ')'  shift, and go to state 130


state 100

   53 expression: '(' expression . ')'
   63           | expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114
    ')'  shift, and go to state 131


state 101

   76 expression: expression IS . type

    IDENT   shift, and go to state 51
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    type         go to state 132
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 102

   75 expression: expression OR . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 133


state 103

   74 expression: expression AND . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 134


state 104

   64 expression: expression NE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 135


state 105

   63 expression: expression EQ . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 136


state 106

   67 expression: expression '>' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 137


state 107

   65 expression: expression '<' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 138


state 108

   66 expression: expression SE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 139


state 109

   68 expression: expression LE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 140


state 110

   69 expression: expression '+' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 141


state 111

   70 expression: expression '-' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 142


state 112

   71 expression: expression '*' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 143


state 113

   72 expression: expression '/' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 144


state 114

   73 expression: expression '%' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 145


state 115

   16 function: accessmodif type IDENT '(' @4 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 146


state 116

   45 arraytype: basictype '[' ',' ',' ']' .

    $default  reduce using rule 45 (arraytype)


state 117

   21 args: args ',' arg .

    $default  reduce using rule 21 (args)


state 118

   14 constructor: accessmodif IDENT '(' @3 args_e ')' '{' . statements '}'

    $default  reduce using rule 101 (statements)

    statements  go to state 147


state 119

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 148


state 120

   56 expression: IDENT '=' expression .
   63           | expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 56 (expression)


state 121

   61 expression: IDENT '.' expression .
   63           | expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    $default  reduce using rule 61 (expression)


state 122

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type
   87 expr_list: expression .

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 87 (expr_list)


state 123

   88 expr_list: expr_list . ',' expression
   90 expr_list_e: expr_list .

    ','  shift, and go to state 149

    $default  reduce using rule 90 (expr_list_e)


state 124

   58 expression: IDENT '(' expr_list_e . ')'

    ')'  shift, and go to state 150


state 125

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type
   84 arrayindex: '[' expression . ']'
   85           | '[' expression . ',' expression ']'
   86           | '[' expression . ',' expression ',' expression ']'

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114
    ','  shift, and go to state 151
    ']'  shift, and go to state 152


state 126

   57 expression: IDENT arrayindex '=' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 153


state 127

   62 expression: IDENT arrayindex '.' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 154


state 128

   59 expression: NEW IDENT '(' . expr_list_e ')'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 89 (expr_list_e)

    expression   go to state 122
    expr_list    go to state 123
    expr_list_e  go to state 155


state 129

   60 expression: NEW noarraytype arrayindex .

    $default  reduce using rule 60 (expression)


state 130

   77 expression: '(' basictype ')' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 156


state 131

   53 expression: '(' expression ')' .

    $default  reduce using rule 53 (expression)


state 132

   76 expression: expression IS type .

    $default  reduce using rule 76 (expression)


state 133

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   75           | expression OR expression .
   76           | expression . IS type

    IS   shift, and go to state 101
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 75 (expression)


state 134

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   74           | expression AND expression .
   75           | expression . OR expression
   76           | expression . IS type

    IS   shift, and go to state 101
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 74 (expression)


state 135

   63 expression: expression . EQ expression
   64           | expression . NE expression
   64           | expression NE expression .
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    IS   shift, and go to state 101
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 64 (expression)


state 136

   63 expression: expression . EQ expression
   63           | expression EQ expression .
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    IS   shift, and go to state 101
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 63 (expression)


state 137

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   67           | expression '>' expression .
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 67 (expression)


state 138

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   65           | expression '<' expression .
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 65 (expression)


state 139

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   66           | expression SE expression .
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 66 (expression)


state 140

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   68           | expression LE expression .
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 68 (expression)


state 141

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   69           | expression '+' expression .
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 69 (expression)


state 142

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   70           | expression '-' expression .
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 70 (expression)


state 143

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   71           | expression '*' expression .
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    $default  reduce using rule 71 (expression)


state 144

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   72           | expression '/' expression .
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    $default  reduce using rule 72 (expression)


state 145

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   73           | expression '%' expression .
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    $default  reduce using rule 73 (expression)


state 146

   16 function: accessmodif type IDENT '(' @4 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 157


state 147

   14 constructor: accessmodif IDENT '(' @3 args_e ')' '{' statements . '}'
  102 statements: statements . statement

    IDENT      shift, and go to state 158
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 159
    WHILE      shift, and go to state 160
    FOR        shift, and go to state 161
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 162
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 163
    '}'        shift, and go to state 164
    ';'        shift, and go to state 165

    type         go to state 166
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31
    expression   go to state 167
    statement    go to state 168


state 148

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' '{' . statements '}'

    $default  reduce using rule 101 (statements)

    statements  go to state 169


state 149

   88 expr_list: expr_list ',' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 170


state 150

   58 expression: IDENT '(' expr_list_e ')' .

    $default  reduce using rule 58 (expression)


state 151

   85 arrayindex: '[' expression ',' . expression ']'
   86           | '[' expression ',' . expression ',' expression ']'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 171


state 152

   84 arrayindex: '[' expression ']' .

    $default  reduce using rule 84 (arrayindex)


state 153

   57 expression: IDENT arrayindex '=' expression .
   63           | expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 57 (expression)


state 154

   62 expression: IDENT arrayindex '.' expression .
   63           | expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type

    $default  reduce using rule 62 (expression)


state 155

   59 expression: NEW IDENT '(' expr_list_e . ')'

    ')'  shift, and go to state 172


state 156

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type
   77           | '(' basictype ')' expression .

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 77 (expression)


state 157

   16 function: accessmodif type IDENT '(' @4 args_e ')' '{' . statements '}'

    $default  reduce using rule 101 (statements)

    statements  go to state 173


state 158

   34 noarraytype: IDENT .
   40 arraytype: IDENT . '[' ']'
   41          | IDENT . '[' ',' ']'
   42          | IDENT . '[' ',' ',' ']'
   48 expression: IDENT . INCREMENT
   49           | IDENT . DECREMENT
   54           | IDENT .
   55           | IDENT . arrayindex
   56           | IDENT . '=' expression
   57           | IDENT . arrayindex '=' expression
   58           | IDENT . '(' expr_list_e ')'
   61           | IDENT . '.' expression
   62           | IDENT . arrayindex '.' expression

    '='        shift, and go to state 84
    DECREMENT  shift, and go to state 85
    INCREMENT  shift, and go to state 86
    '.'        shift, and go to state 87
    '('        shift, and go to state 88
    '['        shift, and go to state 174

    IDENT     reduce using rule 34 (noarraytype)
    $default  reduce using rule 54 (expression)

    arrayindex  go to state 90


state 159

   91 statement: IF . '(' expression ')' statement
   92          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 175


state 160

   93 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 176


state 161

   94 statement: FOR . '(' variables_e ';' expr_e ';' expr_e ')' statement

    '('  shift, and go to state 177


state 162

  100 statement: RETURN . expr_e ';'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 106 (expr_e)

    expression  go to state 178
    expr_e      go to state 179


state 163

   99 statement: '{' . @6 statements '}'

    $default  reduce using rule 98 (@6)

    @6  go to state 180


state 164

   14 constructor: accessmodif IDENT '(' @3 args_e ')' '{' statements '}' .

    $default  reduce using rule 14 (constructor)


state 165

   97 statement: ';' .

    $default  reduce using rule 97 (statement)


state 166

   96 statement: type . variables ';'

    IDENT  shift, and go to state 75

    variables  go to state 181
    variable   go to state 38


state 167

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type
   95 statement: expression . ';'

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114
    ';'  shift, and go to state 182


state 168

  102 statements: statements statement .

    $default  reduce using rule 102 (statements)


state 169

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' '{' statements . '}'
  102 statements: statements . statement

    IDENT      shift, and go to state 158
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 159
    WHILE      shift, and go to state 160
    FOR        shift, and go to state 161
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 162
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 163
    '}'        shift, and go to state 183
    ';'        shift, and go to state 165

    type         go to state 166
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31
    expression   go to state 167
    statement    go to state 168


state 170

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type
   88 expr_list: expr_list ',' expression .

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 88 (expr_list)


state 171

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type
   85 arrayindex: '[' expression ',' expression . ']'
   86           | '[' expression ',' expression . ',' expression ']'

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114
    ','  shift, and go to state 184
    ']'  shift, and go to state 185


state 172

   59 expression: NEW IDENT '(' expr_list_e ')' .

    $default  reduce using rule 59 (expression)


state 173

   16 function: accessmodif type IDENT '(' @4 args_e ')' '{' statements . '}'
  102 statements: statements . statement

    IDENT      shift, and go to state 158
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 159
    WHILE      shift, and go to state 160
    FOR        shift, and go to state 161
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 162
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 163
    '}'        shift, and go to state 186
    ';'        shift, and go to state 165

    type         go to state 166
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31
    expression   go to state 167
    statement    go to state 168


state 174

   40 arraytype: IDENT '[' . ']'
   41          | IDENT '[' . ',' ']'
   42          | IDENT '[' . ',' ',' ']'
   84 arrayindex: '[' . expression ']'
   85           | '[' . expression ',' expression ']'
   86           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    ','        shift, and go to state 42
    ']'        shift, and go to state 43

    expression  go to state 125


state 175

   91 statement: IF '(' . expression ')' statement
   92          | IF '(' . expression ')' statement ELSE statement

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 187


state 176

   93 statement: WHILE '(' . expression ')' statement

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 188


state 177

   94 statement: FOR '(' . variables_e ';' expr_e ';' expr_e ')' statement

    IDENT   shift, and go to state 189
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    $default  reduce using rule 103 (variables_e)

    variables    go to state 190
    variable     go to state 38
    type         go to state 191
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31
    variables_e  go to state 192


state 178

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type
  107 expr_e: expression .

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 107 (expr_e)


state 179

  100 statement: RETURN expr_e . ';'

    ';'  shift, and go to state 193


state 180

   99 statement: '{' @6 . statements '}'

    $default  reduce using rule 101 (statements)

    statements  go to state 194


state 181

   25 variables: variables . ',' variable
   96 statement: type variables . ';'

    ';'  shift, and go to state 195
    ','  shift, and go to state 48


state 182

   95 statement: expression ';' .

    $default  reduce using rule 95 (statement)


state 183

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' '{' statements '}' .

    $default  reduce using rule 18 (function)


state 184

   86 arrayindex: '[' expression ',' expression ',' . expression ']'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression  go to state 196


state 185

   85 arrayindex: '[' expression ',' expression ']' .

    $default  reduce using rule 85 (arrayindex)


state 186

   16 function: accessmodif type IDENT '(' @4 args_e ')' '{' statements '}' .

    $default  reduce using rule 16 (function)


state 187

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type
   91 statement: IF '(' expression . ')' statement
   92          | IF '(' expression . ')' statement ELSE statement

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114
    ')'  shift, and go to state 197


state 188

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type
   93 statement: WHILE '(' expression . ')' statement

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114
    ')'  shift, and go to state 198


state 189

   26 variable: IDENT .
   27         | IDENT . '=' expression
   34 noarraytype: IDENT .
   40 arraytype: IDENT . '[' ']'
   41          | IDENT . '[' ',' ']'
   42          | IDENT . '[' ',' ',' ']'

    '='  shift, and go to state 45
    '['  shift, and go to state 34

    IDENT     reduce using rule 34 (noarraytype)
    $default  reduce using rule 26 (variable)


state 190

   25 variables: variables . ',' variable
  105 variables_e: variables .

    ','  shift, and go to state 48

    $default  reduce using rule 105 (variables_e)


state 191

  104 variables_e: type . variables

    IDENT  shift, and go to state 75

    variables  go to state 199
    variable   go to state 38


state 192

   94 statement: FOR '(' variables_e . ';' expr_e ';' expr_e ')' statement

    ';'  shift, and go to state 200


state 193

  100 statement: RETURN expr_e ';' .

    $default  reduce using rule 100 (statement)


state 194

   99 statement: '{' @6 statements . '}'
  102 statements: statements . statement

    IDENT      shift, and go to state 158
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 159
    WHILE      shift, and go to state 160
    FOR        shift, and go to state 161
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 162
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 163
    '}'        shift, and go to state 201
    ';'        shift, and go to state 165

    type         go to state 166
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31
    expression   go to state 167
    statement    go to state 168


state 195

   96 statement: type variables ';' .

    $default  reduce using rule 96 (statement)


state 196

   63 expression: expression . EQ expression
   64           | expression . NE expression
   65           | expression . '<' expression
   66           | expression . SE expression
   67           | expression . '>' expression
   68           | expression . LE expression
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '%' expression
   74           | expression . AND expression
   75           | expression . OR expression
   76           | expression . IS type
   86 arrayindex: '[' expression ',' expression ',' expression . ']'

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114
    ']'  shift, and go to state 202


state 197

   91 statement: IF '(' expression ')' . statement
   92          | IF '(' expression ')' . statement ELSE statement

    IDENT      shift, and go to state 158
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 159
    WHILE      shift, and go to state 160
    FOR        shift, and go to state 161
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 162
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 163
    ';'        shift, and go to state 165

    type         go to state 166
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31
    expression   go to state 167
    statement    go to state 203


state 198

   93 statement: WHILE '(' expression ')' . statement

    IDENT      shift, and go to state 158
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 159
    WHILE      shift, and go to state 160
    FOR        shift, and go to state 161
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 162
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 163
    ';'        shift, and go to state 165

    type         go to state 166
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31
    expression   go to state 167
    statement    go to state 204


state 199

   25 variables: variables . ',' variable
  104 variables_e: type variables .

    ','  shift, and go to state 48

    $default  reduce using rule 104 (variables_e)


state 200

   94 statement: FOR '(' variables_e ';' . expr_e ';' expr_e ')' statement

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 106 (expr_e)

    expression  go to state 178
    expr_e      go to state 205


state 201

   99 statement: '{' @6 statements '}' .

    $default  reduce using rule 99 (statement)


state 202

   86 arrayindex: '[' expression ',' expression ',' expression ']' .

    $default  reduce using rule 86 (arrayindex)


state 203

   91 statement: IF '(' expression ')' statement .
   92          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 206

    $default  reduce using rule 91 (statement)


state 204

   93 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 93 (statement)


state 205

   94 statement: FOR '(' variables_e ';' expr_e . ';' expr_e ')' statement

    ';'  shift, and go to state 207


state 206

   92 statement: IF '(' expression ')' statement ELSE . statement

    IDENT      shift, and go to state 158
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 159
    WHILE      shift, and go to state 160
    FOR        shift, and go to state 161
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 162
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 163
    ';'        shift, and go to state 165

    type         go to state 166
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31
    expression   go to state 167
    statement    go to state 208


state 207

   94 statement: FOR '(' variables_e ';' expr_e ';' . expr_e ')' statement

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 106 (expr_e)

    expression  go to state 178
    expr_e      go to state 209


state 208

   92 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 92 (statement)


state 209

   94 statement: FOR '(' variables_e ';' expr_e ';' expr_e . ')' statement

    ')'  shift, and go to state 210


state 210

   94 statement: FOR '(' variables_e ';' expr_e ';' expr_e ')' . statement

    IDENT      shift, and go to state 158
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 159
    WHILE      shift, and go to state 160
    FOR        shift, and go to state 161
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 162
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 163
    ';'        shift, and go to state 165

    type         go to state 166
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31
    expression   go to state 167
    statement    go to state 211


state 211

   94 statement: FOR '(' variables_e ';' expr_e ';' expr_e ')' statement .

    $default  reduce using rule 94 (statement)
